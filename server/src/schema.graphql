# import DateTime, Link, Vote, LinkSubscriptionPayload,VoteSubscriptionPayload, Muscle, Exercices, UserWhereUniqueInput, UserUpdateInput, updateUser from "./generated/prisma.graphql"


type Query {
  feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
  user(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): User!
  muscle(name: String): Muscle!
  exercices(name: String): Exercices
  }

type Feed {
  links: [Link!]!
  count: Int!
}

type Mutation {
  post(url: String!, description: String!): Link!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  vote(linkId: ID!): Vote
  postm(name: String!, type: String!): Muscle!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  firstname: String
  lastname: String
  email: String!
  
  age: Int
  city: String
  weight: Float
  height: Float
}

type Exercices {
  id: ID!
  name: String
  Muscle : Muscle
}

type Weight{
	weight:Float
	date:DateTime
}


type Subscription {
  newLink: LinkSubscriptionPayload
  newVote: VoteSubscriptionPayload
}
